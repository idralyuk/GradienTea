<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.hypher.gradientea</groupId>
		<artifactId>GradienTeaParent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>GradienTeaUI</artifactId>
	<name>${project.artifactId}</name>
	<packaging>war</packaging>

	<properties>
		<!-- Sets the project's default encoding.
				 http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<webappDirectory>${project.build.directory}/GradienTeaUI-${project.version}</webappDirectory>

		<!-- GWT -->
		<gwtDebugSuspend>false</gwtDebugSuspend>
		<gwtDebugPort>8000</gwtDebugPort>
		<gwtRunTarget>index.jsp</gwtRunTarget>
		<gwtBindAddress>0.0.0.0</gwtBindAddress>
		<gwtExtraVmArgs />

		<!--================================================================================================================
		  == Google App Engine
		 -->
		<!-- Specify AppEngine version for your project. It should match SDK version pointed to
      by ${gae.home} property (Typically, one used by your Eclipse plug-in) -->
		<gae.version>1.6.5</gae.version>

		<!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
		<gae.application.version>test</gae.application.version>

		<!-- port defaults to 8080 -->
		<gae.port>8080</gae.port>

		<!-- Produce detailed JS during GWT compilation for development environment -->
		<!--<gwt.style>DETAILED</gwt.style>-->
	</properties>


	<dependencies>
		<!--================================================================================================================
		  == Local Dependencies
		  -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>LightingModel</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ArtNetPlayer</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!--================================================================================================================
		  == Hypher Dependencies
		  -->
		<dependency>
			<groupId>fr.azelart.artnetstack</groupId>
			<artifactId>stack</artifactId>
		</dependency>

		<dependency>
			<groupId>net.blimster.gwt.threejs</groupId>
			<artifactId>three4g</artifactId>
		</dependency>

		<!--================================================================================================================
		  == Third Party Dependencies
		  -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava-gwt</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.gwt.inject</groupId>
			<artifactId>gin</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
		</dependency>

		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-gwt-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-gwt-server</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

		<plugins>
			<!--==============================================================================================================
			  == GWT Plugin
				-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>generateAsync</goal>
						</goals>
					</execution>
				</executions>

				<!-- Plugin configuration. Documentation at http://mojo.codehaus.org/gwt-maven-plugin/compile-mojo.html -->
				<configuration>
					<runTarget>index.jsp</runTarget>
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<extraJvmArgs>-Xmx512m -XX:MaxPermSize=512m ${gwtExtraVmArgs}</extraJvmArgs>
					<debugSuspend>${gwtDebugSuspend}</debugSuspend>
					<debugPort>${gwtDebugPort}</debugPort>
					<bindAddress>${gwtBindAddress}</bindAddress>
					<strict>true</strict>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn gae:deploy"
				to upload to GAE. -->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.9.4</version>
			</plugin>

			<!-- Upload application to the appspot automatically, during release:perform -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.3.1</version>
				<dependencies>
					<dependency>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-websocket</artifactId>
						<version>7.6.10.v20130312</version>
					</dependency>
				</dependencies>
				<configuration>
					<container>
						<containerId>jetty7x</containerId>
						<type>embedded</type>
					</container>
					<configuration>
						<properties>
							<cargo.servlet.port>7070</cargo.servlet.port>
							<cargo.logging>high</cargo.logging>
						</properties>
					</configuration>

					<deployables>
						<deployable>
							<groupId>${project.groupId}</groupId>
							<type>war</type>
							<artifactId>${project.artifactId}</artifactId>
							<properties>
								<context>/</context>
							</properties>
						</deployable>
					</deployables>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- We can configure our integration server to activate this profile and perform gae:deploy,
			thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com automatically -->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>

				<!-- Produce pretty JS during GWT compilation for test environment -->
				<gwt.style>PRETTY</gwt.style>
			</properties>
		</profile>

		<!-- This profile will activate automatically during release and upload application to
			the http://2.latest.<applicationName>.appspot.com (We might want to set the 2nd version as
			our applications Default version to be accessible at http://<applicationName>.appspot.com) -->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!-- During release, set application version in appengine-web.xml to 2 -->
				<gae.application.version>release</gae.application.version>

				<!-- Produce compressed JS during GWT compilation for production environment -->
				<gwt.style>OBFUSCATED</gwt.style>
			</properties>
		</profile>
	</profiles>
</project>